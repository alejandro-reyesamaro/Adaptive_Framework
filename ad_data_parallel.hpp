/**
 * Adaptive search C++
 *
 * \file ad_data_parallel.hpp
 * \brief Main data structure for the parallel version
 * \author Florian Richoux
 * \date 2013-02-04
 */

#define RESULTS_CHAR_MSG_SIZE 256 /* with \n */

/**
 * \class AdDataParallel ad_data_parallel.hpp
 * \brief Main data structure for the parallel version
 */
class AdDataParallel : public AdData
{
public:
  char		results[RESULTS_CHAR_MSG_SIZE];		/**< To communicate performances */
  int		*param_a_ptr;				/**< Parameter 'a' for Trident generator */
  int		*param_c_ptr;				/**< Parameter 'c' for Trident generator */
  int		*last_value_ptr;			/**< Last value generated by Trident */
  long int	*print_seed_ptr;			/**< Value to print to redo this scenario */
  time_t	tv_sec;					/**< Time measure */
  int		*count_ptr;
  int		size_message;				/**< Message size = (range + config + stats + etc) */ 
  unsigned int	*block_of_messages;			/**< To store messages, reserve a big block of memory here */
  int		*nb_digits_nbprocs_ptr;			/**< For debuging */
};
